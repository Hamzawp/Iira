// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id       Int           @id @default(autoincrement())
  email         String        @unique
  first_name    String?
  last_name     String?
  dob           DateTime?
  password      String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  role          String        @default("guest")
  university    Universities?
  college_id    Int?
  college       Colleges?     @relation(fields: [college_id], references: [college_id], onDelete: Cascade)
  department_id Int?
  department    Departments?  @relation(fields: [department_id], references: [dept_id], onDelete: Cascade)
}

// only one user for the university
model Universities {
  uni_id      Int        @id @default(autoincrement())
  uni_name    String
  uni_address String
  uni_phone   String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  uni_head_id Int        @unique
  uni_head    User       @relation(fields: [uni_head_id], references: [user_id], onDelete: Cascade)
  colleges    Colleges[]
}

model Colleges {
  college_id    Int           @id @default(autoincrement())
  college_name  String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  university_id Int
  university    Universities  @relation(fields: [university_id], references: [uni_id], onDelete: Cascade)
  departments   Departments[]
  college_users User[]
}

model Departments {
  dept_id    Int      @id @default(autoincrement())
  dept_name  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  college_id Int
  college    Colleges @relation(fields: [college_id], references: [college_id], onDelete: Cascade)
  dept_users User[]
}
